<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist></Blacklist>
  <Whitelist>
    <ID>LongMethod:HeapDumpRenderer.kt$HeapDumpRenderer$fun render( context: Context, heapDumpFile: File, sourceWidth: Int, sourceHeight: Int, /** * If [sourceBytesPerPixel] &gt; 0 then [sourceHeight] will be ignored. */ sourceBytesPerPixel: Int ): Bitmap</ID>
    <ID>LongParameterList:Notifications.kt$Notifications$( context: Context, contentTitle: CharSequence, contentText: CharSequence, pendingIntent: PendingIntent?, notificationId: Int, type: NotificationType )</ID>
    <ID>LongParameterList:SquigglySpan.kt$SquigglySpan.Companion$( path: Path, left: Float, right: Float, centerY: Float, amplitude: Float, periodDegrees: Float )</ID>
    <ID>ReturnCount:DisplayLeakAdapter.kt$DisplayLeakAdapter$private fun getConnectorType(position: Int): Type</ID>
    <ID>ReturnCount:InternalLeakCanary.kt$InternalLeakCanary$private fun addDynamicShortcut(application: Application)</ID>
    <ID>TooManyFunctions:DisplayLeakAdapter.kt$DisplayLeakAdapter : BaseAdapter</ID>
    <ID>TooManyFunctions:HeapDumpTrigger.kt$HeapDumpTrigger</ID>
  </Whitelist>
</SmellBaseline>
